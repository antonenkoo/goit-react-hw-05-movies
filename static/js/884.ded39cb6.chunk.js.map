{"version":3,"file":"static/js/884.ded39cb6.chunk.js","mappings":"mPAIMA,EAAU,mCAiEVC,EAAeC,EAAAA,GAAAA,IAAH,sDAIZC,EAAYD,EAAAA,GAAAA,IAAH,+DAKTE,EAAeF,EAAAA,GAAAA,IAAH,oEAKZG,EAAWH,EAAAA,GAAAA,GAAH,wCAId,UAjFqB,WAAO,IAAD,MACjBI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAHQ,wCAOzB,sGACyBC,MAAM,sCAAD,OACYP,EADZ,oBAC+BN,GACzD,CAEEc,OAAQ,QALd,cACQC,EADR,gBAQqBA,EAASC,OAR9B,OAQQC,EARR,OASEP,EAASO,GATX,4CAPyB,sBAmBzB,OAnByB,mCAKzBC,IAeE,6BACE,SAAC,KAAD,CAAMC,GAAE,iBAAER,QAAF,IAAEA,GAAF,UAAEA,EAAUS,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,QAAnC,UACE,kDAEF,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,UAACpB,EAAD,YACE,SAACF,EAAD,CACEuB,IAAG,0CAAqCf,EAAMgB,aAC9CC,IAAI,MAEN,4BACE,wBAAKjB,EAAMkB,kBACX,wCAAgBC,KAAKC,MAA2B,GAArBpB,EAAMqB,cAAjC,QACA,sCACA,uBAAIrB,EAAMsB,YACV,oCAEA,SAAC3B,EAAD,iBACGK,QADH,IACGA,GADH,UACGA,EAAOuB,cADV,aACG,EAAeC,KAAI,SAAAC,GAAK,OACvB,SAAC7B,EAAD,UAA0B6B,EAAMC,MAAjBD,EAAME,GADE,eAOjC,2BACE,yBACE,0DAEF,yBACE,SAAC,KAAD,CAAMjB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAG,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useParams, Link, useLocation, Outlet } from 'react-router-dom';\nimport { useState, Suspense } from 'react';\nimport styled from 'styled-components';\n\nconst API_KEY = 'cc1be8043ea5c323822776e71613d749';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n\n  getMoviesById();\n\n  async function getMoviesById() {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`,\n      {\n        // HTTP Method\n        method: 'GET',\n      }\n    );\n    const data = await response.json();\n    setMovie(data);\n  }\n\n  return (\n    <main>\n      <Link to={location?.state?.from ?? '/home'}>\n        <button>‚Üê Go back</button>\n      </Link>\n      <Suspense fallback={<div>LOADING...</div>}>\n        <MovieInfo>\n          <PosterStyled\n            src={`https://image.tmdb.org/t/p/w342/${movie.poster_path}`}\n            alt=\"\"\n          />\n          <div>\n            <h2>{movie.original_title}</h2>\n            <p>User score: {Math.floor(movie.vote_average * 10)}%</p>\n            <h4>Overview</h4>\n            <p>{movie.overview}</p>\n            <h4>Genres</h4>\n\n            <GenresStyled>\n              {movie?.genres?.map(genre => (\n                <LiStyled key={genre.id}>{genre.name}</LiStyled>\n              ))}\n            </GenresStyled>\n          </div>\n        </MovieInfo>\n      </Suspense>\n      <ul>\n        <li>\n          <strong>Additional information</strong>\n        </li>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nconst PosterStyled = styled.img`\n  margin: 10px 20px 0px 5px;\n`;\n\nconst MovieInfo = styled.div`\n  margin: 10px 0px;\n  display: flex;\n`;\n\nconst GenresStyled = styled.div`\n  display: flex;\n  list-style-type: none;\n`;\n\nconst LiStyled = styled.li`\n  margin: 5px;\n`;\n\nexport default MovieDetails;\n"],"names":["API_KEY","PosterStyled","styled","MovieInfo","GenresStyled","LiStyled","movieId","useParams","useState","movie","setMovie","location","useLocation","fetch","method","response","json","data","getMoviesById","to","state","from","Suspense","fallback","src","poster_path","alt","original_title","Math","floor","vote_average","overview","genres","map","genre","name","id"],"sourceRoot":""}